'use strict'

<<<<<<< HEAD
const u = require('universalify').fromCallback
const fs = require('graceful-fs')
=======
const u = require('universalify').fromPromise
const fs = require('../fs')
>>>>>>> tundeseun/devtest
const path = require('path')
const mkdir = require('../mkdirs')
const pathExists = require('../path-exists').pathExists

<<<<<<< HEAD
function outputFile (file, data, encoding, callback) {
  if (typeof encoding === 'function') {
    callback = encoding
    encoding = 'utf8'
  }

  const dir = path.dirname(file)
  pathExists(dir, (err, itDoes) => {
    if (err) return callback(err)
    if (itDoes) return fs.writeFile(file, data, encoding, callback)

    mkdir.mkdirs(dir, err => {
      if (err) return callback(err)

      fs.writeFile(file, data, encoding, callback)
    })
  })
=======
async function outputFile (file, data, encoding = 'utf-8') {
  const dir = path.dirname(file)

  if (!(await pathExists(dir))) {
    await mkdir.mkdirs(dir)
  }

  return fs.writeFile(file, data, encoding)
>>>>>>> tundeseun/devtest
}

function outputFileSync (file, ...args) {
  const dir = path.dirname(file)
<<<<<<< HEAD
  if (fs.existsSync(dir)) {
    return fs.writeFileSync(file, ...args)
  }
  mkdir.mkdirsSync(dir)
=======
  if (!fs.existsSync(dir)) {
    mkdir.mkdirsSync(dir)
  }

>>>>>>> tundeseun/devtest
  fs.writeFileSync(file, ...args)
}

module.exports = {
  outputFile: u(outputFile),
  outputFileSync
}
